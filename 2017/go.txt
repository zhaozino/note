
Hello World: 
	package main

	import "fmt"
	
	const PI = 3.14
	
	var name = "gopher"
	
	//一般类型声明
	type newType int
	
	//结构的声明
	type gopher struct{}
	
	//接口的声明
	type golang interface{}
	
	func main() {
		fmt.Println("Hello, World!")
	}
	
	go run hello.go
	
go语言的主要特性
	自动垃圾回收；
	更丰富的内置类型；
	函数多返回值；
	错误处理；
	匿名函数和闭包；
	类型和接口；
	并发编程；
	反射；
	语言交互性；
	
Go语言的基础组成有以下几个部分：
	包声明；
	引入包；
	函数；
	变量；
	语句 & 表达式；
	注释；
	
每个Go应用程序都包含一个名为main的包，且一个可执行程序有且仅有一个main包；只有package名称为main的包可以包含main函数；
	main函数是每一个可执行程序所必须包含的，一般来说都是在启动后第一个执行的函数；
	如果有init()函数则会先执行该函数；
	
当标识符（包括常量、变量、类型、函数名、结构字段等等）以一个大写字母开头，如：Group1，
	那么使用这种形式的标识符的对象就可以被外部包的代码所使用（客户端程序需要先导入这个包），
	这被称为导出（像面向对象语言中的public）；标识符如果以小写字母开头，则对包外是不可见的，
	但是他们在整个包的内部是可见并且可用的（像面向对象语言中的protected）。
	
标识符是一个或多个字母（A~Z/a~z）、数字（0~9）、下划线_组成的序列，但是第一个字符必须是字母或下滑线，
	而不能是数字；
	
Go语言数据类型：布尔型、数字类型、字符串类型、派生类型；
	派生类型：指针类型、数组类型、结构化类型、Channel类型、函数类型、切片类型、接口类型、Map类型；
	
变量声明
	var identifier type；
	
	var a int;
	a = 10;
	
	var a = 10;
	
	a := 10;
	
常量声明
	const identifier [type] value
	
	const b string = "abc"
	const b = "abc"
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	