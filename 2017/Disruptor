原文：https://ifeve.com/disruptor/
原文：http://ifeve.com/disruptor-locks-are-bad/

数组的优点
	首先，因为它是数组，所以要比链表快，而且有一个容易预测的访问模式。（译者注：数组内元素的内存地址的连续性存储的）。这是对CPU缓存友好的—也就是说，在硬件级别，
		数组中的元素是会被预加载的，因此在ringbuffer当中，cpu无需时不时去主存加载数组中的下一个元素。（校对注：因为只要一个元素被加载到缓存行，其他相邻的几个元素也会
		被加载进同一个缓存行）
	其次，你可以为数组预先分配内存，使得数组对象一直存在（除非程序终止）。这就意味着不需要花大量的时间用于垃圾回收。此外，不像链表那样，需要为每一个添加到其上面的对象
		创造节点对象—对应的，当删除节点时，需要执行相应的内存清理操作。

CAS、缓存行（64字节）、伪共享

内存屏障：volidate

RingBuffer环形数组
	没有尾指针；
	cursor：数组中下一个可消费的元素；
	next：数组中下一个可生产的元素，必须大于最慢消费者的消费元素seq；
	
多消费者：彼此间没有关联；
多生产者：写入的下一个元素，必须大于最慢消费者的消费元素seq；

两个指针的变更使用CAS；
