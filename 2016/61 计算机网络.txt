
***********************************************************************

计算机网络、HTTP权威指南、鸟哥的linux私房菜、分布式操作系统

物理层的中间设备叫转发器；
数据链路层的中间设备叫网桥或桥接器；
网络层的中间设备叫路由器；
网络层以上的中间设备叫网关；历史原因，有些时候把路由器也称为网关；
一般情况下，交换机工作在数据链路层，但现在有一些新的交换机可以工作在网络层；


计算机网络
物理层：比特；
数据链路层：帧；
网络层：IP数据报；
运输层：报文段；

物理层
	集线器的英文称为“Hub”。“Hub”是“中心”的意思，集线器的主要功能是对接收到的信号进行再生整形放大，以扩大网络的传输距离，同时把所有节点集中在以它为中心的节点上。
	它工作于OSI(开放系统互联参考模型)参考模型第一层，即“物理层”。集线器与网卡、网线等传输介质一样，属于局域网中的基础设备，采用CSMA/CD（即带冲突检测的载波监听多路访问技术)
	介质访问控制机制。集线器每个接口简单的收发比特，收到1就转发1，收到0就转发0，不进行碰撞检测。
	
	集线器（hub）属于纯硬件网络底层设备，基本上不具有类似于交换机的"智能记忆"能力和"学习"能力。它也不具备交换机所具有的MAC地址表，
	所以它发送数据时都是没有针对性的，而是采用广播方式发送。也就是说当它要向某节点发送数据时，不是直接把数据发送到目的节点，
	而是把数据包发送到与集线器相连的所有节点
	
数据链路层的三个问题：封装成帧、透明传输、差错检测；
	封装成帧：添加帧首部、尾部；
	透明传输：帧开始(SOH)、结束标记(EOT)，特殊的控制字符；
	差错检测：循环冗余校验CRC；模2运算，冗余码加到帧的后面；
		数据链路层是无差错传输，并不是可靠传输，因为它没有解决帧丢失、重复、失序问题；
	MTU：链路层最大传输单元；
	mac地址在数据帧中；
	网络适配器：网卡，计算机的硬件地址在适配器的ROM中，而软件地址IP，则在计算机的存储器中；
	集线器、网桥、交换机；
	以太网局域网；
	
	PPP点对点协议，针对两个端点的信息传输，因特网用户通常都要连接到某个ISP才能接入到因特网，PPP协议就是用户计算机和ISP进行通信时所使用的数据链路层协议；
	
	广播信道：星形网；
		CSMA/CD，载波监听多点接入/碰撞检测协议；
			1、载波监听：发送前先检测下总线上是否有其他站在发送数据；
			2、碰撞检测：边发送数据，边检测是否有其他站在发送数据，如果有，立即停止发送；
				推迟一个随机的时间（退避算法），再重新发送；
	
	网桥：工作在数据链路层的MAC子层，它根据MAC帧的目的地址对收到的帧进行转发和过滤。当网桥收到一个帧时，并不是向所有的接口转发此帧，
		而是先检查此帧的目的MAC地址，然后再确定将该帧转发到哪一个接口，或者是把它丢弃；每个接口对应一个网段；
		连接两个或多个以太网，根据MAC转发表，存储转发到不同接口，即到不同的以太网，再到不同的MAC地址；
		存储转发；
		
		多接口网桥——以太网交换机
			实质是多接口的网桥，每个接口都直接与一个单个主机或另一个集线器相连（网桥每个接口都连到以太网的一个网段；集线器：以太网中通过集线器来连接多台主机）
			当主机需要通信时，交换机能同时联通许多对的接口，使每一对互相通信的主机都能像独占通信媒体那样，无碰撞地传输数据。
			对于普通10Mb/s的共享式以太网，若共有N个用户，则每个用户占有的平均带宽只有总带宽(10Mb/s)的N分之一。在使用以太网交换机
			时，虽然在每个接口到主机的带宽还是10Mb/s，但由于一个用户在通信时是独占而不是和其他网络用户共享传输媒体的宽带，因此
			对于拥有N对接口的交换机的总容量为N*10Mb/s，这正是交换机的最大优点；
			
			利用以太网交换机可以很方便地实现虚拟局域网VLAN；
			
			以太网的帧格式里包含虚拟局域网的标识字段；
			
网路层：IP数据报分组转发；
	网路协议IP、地址解析协议ARP(根据IP地址找到物理MAC地址)、逆地址解析协议RARP(根据物理Mac地址找到IP地址)、网际控制报文协议ICMP(PING)、网际组管理协议IGMP；
	IP地址=网络号+主机号；
	A、B、C、D、E类IP地址；
	A：0开头，8位网络号，24位主机号；
	B：10开头，16位网络号，16位主机号；
	C：110开头，24位网络号，8位主机号；
	D：1110开头，多播地址；
	E：1111开头，保留今后使用；
	
	路由器总是有两个或两个以上的IP地址；
	子网掩码：从主机号中取若干位用作子网号；
	
运输层：TCP/UDP
	UDP：无连接、尽最大努力交付、面向报文；
	TCP：面向连接的、可靠交付、全双工；
		停止等待协议
			A发送报文，等待B确认后，再发送下一个报文；
			A超过一段时间仍没收到确认，就认为刚才发送的分组丢失了，重传前面发送过的分组，即超时重传；
			B收到错误的报文直接丢掉，不通知A，A有超时重传机制；
			B收到重复的报文，直接丢掉，并再次发送确认给A；
		连续ARQ协议，即滑动窗口协议
		
应用层：HTTP/FTP/SMTP	
	
三次握手：
	1、建立连接时，客户端发送syn包(syn=j)到服务器，并进入SYN_SEND状态，等待服务器确认；
	2、服务器收到syn包，必须确认客户的SYN（ack=j+1），同时自己也发送一个SYN包（syn=k），即SYN+ACK包，此时服务器进入SYN_RECV状态；
	3、客户端收到服务器的SYN＋ACK包，向服务器发送确认包ACK(ack=k+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。
	完成三次握手，客户端与服务器开始传送数据，也就是ESTABLISHED状态。
	
四次握手
	1、客户端发送FIN（finsh），用来关闭客户端到服务器的数据传输；
	2、服务端收到FIN，返回ACK，确认号为收到的序号+1；
	3、服务器关闭与客户端的连接，发送FIN给客户端；
	4、客户端返回ACK报文确认，并将确认序号设置为收到序号加1。

TCP性能参数
	net.ipv4.tcp_max_syn_backlog = 8192
		SYN队列的长度，默认为1024，加大队列长度为8192，可以容纳更多等待连接的网络连接数
	tcp_rmem：接收缓冲区大小，131072
	tcp_wmem：发送缓冲区，8760
	rmem_max：最大的TCP数据接收窗口（字节），513920
	wmem_max：最大的TCP数据发送窗口（字节），513920
	
HTTP权威指南
	http报文格式：起始行、首部、主体；
		
		起始行：GET /text/hi-there.txt HTTP/1.1
		首部：Content-type:text/plain
		      Content-length:19
		主体：Hi!I am a message!
		
		请求报文：
			<method> <request-URL> <version>
			<headers>
			<entity-body>
			
		响应报文：
			<version> <status> <reason-phrase>
			<headers>
			<entity-body>
	
	Expires/Cache-Control、Last-Modified
	
	1×× 　　保留
	2×× 　　表示请求成功地接收
	3×× 　　为完成请求客户需进一步细化请求
	4×× 　　客户错误
	5×× 　　服务器错误
	
	HTTP CODE
		200
		204：head请求，查看资源类型；
		206：请求一个未完成的下载时，range信息；
		
		301：重定向，永久的；
		302：重定向，暂时的；
		304：静态文件，没有改变；
		
		400：Bad Request，语法错误；
		401：未授权；
		403：Forbidden，服务器接受请求，但是被拒绝处理。
		404：NOT FOUND；
		
		500：系统内部错误；
		503：服务不可用；
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	