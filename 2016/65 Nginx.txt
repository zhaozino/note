
***********************************************************************

Nginx的upstream负载均衡目前支持以下几种方式的分配
	1、轮询（默认）
		每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除；
		
	2、weight
		加权访问，指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况；
		
	3、fair（第三方）
		按后端服务器的响应时间来分配请求，响应时间短的优先分配；
		
	4、url_hash（第三方）
		按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效；


location url匹配有先级：
	1、等号类型（=）的优先级最高。一旦匹配成功，则不再查找其他匹配项。
	2、^~类型表达式。一旦匹配成功，则不再查找其他匹配项。
	3、正则表达式类型（~ ~*）的优先级次之。如果有多个location的正则能匹配的话，则使用正则表达式最长的那个。
	4、常规字符串匹配类型。按前缀匹配。

支持手动和自动降级。自动降级是当后端返回500错误次数在一段时间内达到一定阈值(不包含503)。手动降级是从控制界面操作。

使用Nginx+Lua(OpenResty)开发高性能Web应用
http://jinnianshilongnian.iteye.com/blog/2280928
	web应用：会进行一些业务逻辑处理，甚至进行耗CPU的模板渲染，一般流程：mysql/redis/http获取数据、业务处理、产生JSON/XML/模板渲染内容，比如京东的列表页/商品详情页；
	接入网关：实现如数据校验前置、缓存前置、数据过滤、API请求聚合、AB测试、灰度发布、降级、监控等功能，比如京东的交易大Nginx节点、无线部门正在开发的无线网关、单品页统一服务、实时价格、动态服务；
	Web防火墙：可以进行IP/URL/UserAgent/Referer黑名单、限流等功能；
	缓存服务器：可以对响应内容进行缓存，减少到后端的请求，从而提升性能；
	其他：如静态资源服务器、消息推送服务、缩略图裁剪等。

